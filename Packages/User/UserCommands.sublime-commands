[
//TODO: make one ':gen docs' command that fires a local 'genDocs.sh'
  /**
   * Window/Tab Control   
   */
  { "caption": ":q  - Close Tab", "command": "close"},
  { "caption": ":w  - Save File", "command": "save"},
  {
    "caption": ":qw  - Save and Close Tab",
    "command": "run_multiple_commands",
    "args": {
      "commands": [
        { "command": "save", "context": "window"},
        { "command": "close", "context": "window"}
  ]}},
  {
    "caption": ":x  - Save and Close Tab",
    "command": "run_multiple_commands",
    "args": {
      "commands": [
        { "command": "save", "context": "window"},
        { "command": "close", "context": "window"}
  ]}},
  {
    "caption": ":q! - Close Tab Without Saving",
    "command": "run_multiple_commands",
    "args": {
      "commands": [
        { "command": "revert", "context": "text"},
        { "command": "close", "context": "window"}
  ]}},
  {
    "caption": ":qa - Close Window",
    "command": "close_window"
  },
  {
    "caption": ":xa - Save and Close Window",
    "command": "vi_save_and_exit"
  },
  {
    "caption": ":wqa - Save and Close Window",
    "command": "vi_save_and_exit"
  },
  {
    "caption": ":qa! - Close Window Without Saving",
    "command": "run_multiple_commands",
    "args": {
      "commands": [
        { "command": "revert_all", "context": "window"},
        { "command": "close_window", "context": "window"}
  ]}},
      
  /**
   * Snippets/Plugins 
   */
  {
    "caption": ":snip   - New Snippet",
    "command": "run_multiple_commands",
    "args": {
      "commands": [
        { "command": "create_pane", "args": {"direction": "right"}, "context": "window"},
        { "command": "travel_to_pane", "args": {"direction": "right"}, "context": "window"},
        { "command": "new_snippet", "context": "window"}
    ]}
  },
  {
    "caption": ":vsnip   - New Snippet in Vertical Pane",
    "command": "run_multiple_commands",
    "args": {
      "commands": [
        { "command": "create_pane", "args": {"direction": "down"}, "context": "window"},
        { "command": "travel_to_pane", "args": {"direction": "down"}, "context": "window"},
        { "command": "new_snippet", "context": "window"}
    ]}
  },
  {
    "caption": ":plugin - New Plugin",
    "command": "run_multiple_commands",
    "args": {
      "commands": [
        { "command": "create_pane", "args": {"direction": "right"}, "context": "window"},
        { "command": "travel_to_pane", "args": {"direction": "right"}, "context": "window"},
          { "command": "open_file",
              "args": {
                "file": "Packages/User/untitled.py",
                "contents": "import sublime\nimport sublime_plugin\n\nclass ExampleCommand(sublime_plugin.TextCommand):\n  def run(self, edit):\n    self.view.insert(edit, 0, \"Hello, World!\")"},
            "context": "window"},

  ]}},
  {
    "caption": ":vplugin - New Plugin",
    "command": "run_multiple_commands",
    "args": {
      "commands": [
        { "command": "create_pane", "args": {"direction": "down"}, "context": "window"},
        { "command": "travel_to_pane", "args": {"direction": "down"}, "context": "window"},
          { "command": "open_file",
              "args": {
                "file": "Packages/User/untitled.py",
                "contents": "import sublime\nimport sublime_plugin\n\nclass ExampleCommand(sublime_plugin.TextCommand):\n  def run(self, edit):\n    self.view.insert(edit, 0, \"Hello, World!\")"},
            "context": "window"},

  ]}},

  /**
   * Go To
   */
  { "caption": ":line - Goto Line Number", "command": "show_overlay", "args": {"overlay": "goto", "text": ":"}},
  { "caption": ":@    - Goto Declaration In File","command": "show_overlay", "args": {"overlay": "goto", "text": "@"}},
  { "caption": ":#    - Goto Term In File", "command": "show_overlay", "args": {"overlay": "goto", "text": "#"}},
  
  /**
   * Projects
   */
  { "caption": ":ps - Quick Switch Project", "command": "prompt_select_workspace"},
  { "caption": ":pw - Save Project As", "command": "save_project_and_workspace_as"},
  { "caption": ":pa - Add Folder to Project", "command": "prompt_add_folder"},
  { "caption": ":po - Open Project", "command": "prompt_open_project"},
  { "caption": ":pt - Open Terminal in Project Folder", "command": "open_terminal_project_folder"},
  { "caption": ":pg - Goto Anything in Project", "command": "goto_symbol_in_project"},
  { "caption": ":pe - Edit Project File", "command": "open_file", "args": {"file": "${project}"}},
  { "caption": ":t  - Open Terminal", "command": "open_terminal"},
  { "caption": ":todo - Open Project Todo List;", "command": "todo_review", "args": {"open_files": true}},
  { "caption": ":todo open - Open Todo List For Open Files Only", "command": "todo_review", "args": {"open_files": true, "open_files_only": true}},

  /**
   * Files
   */
  { "caption": ":o - Open File", "command": "open_browse"},
  { "caption": ":e - Make New File", "command": "advanced_new_file_new"},
  { "caption": ":ls - List Open Files and Project Files", "command": "show_overlay", "args": {"overlay": "goto", "show_files": true}},
  { "caption": ":bd - Close Buffer", "command": "close"},
  { "caption": ":d - Delete Current File", "command": "advanced_new_file_delete", "args": {"current": true}}, 
  { "caption": ":rm - Delete File", "command": "advanced_new_file_delete"},
  { "caption": ":o~ - Open Resource", "command": "package_resource_viewer"},

  /**
   * Tab Management
   */
  { "caption": ":tabnew - New Tab with Blank File", "command": "new_file"},
  { "caption": ":tabNext - Go to Next Tab", "command": "next_view"},
  { "caption": ":tabPrevious - Go to Previous Tab", "command": "prev_view"},
  { "caption": ":tabOnly - Close All Other Open Tabs", "command": "close_other_tabs"},
  { "caption": ":tabClose - Close Tab", "command": "close"},
  { "caption": ":tabFind - List Tabs", "command": "show_overlay", "args": {"overlay": "goto", "show_files": true}},
  { "caption": ":tabMove + - Move Tab Right", "command": "move_tab", "args": { "position": "+1" }},
  { "caption": ":tabMove - - Move Tab Left", "command": "move_tab", "args": { "position": "-1" }},
  { "caption": ":tabMove 0 - Move Tab to First Position", "command": "move_tab", "args": { "position": "0" }},
  { "caption": ":tabMove $ - Move Tab to Last Position", "command": "move_tab", "args": { "position": "999" }},

  /**
   * Pane Management
   */
  {
    "caption": ":vsplit - Split the Pane Vertically",
    "command": "run_multiple_commands",
    "args": {
      "commands": [
        { "command": "create_pane", "args": {"direction": "down"}, "context": "window"},
        { "command": "travel_to_pane", "args": {"direction": "down"}, "context": "window"}
  ]}},      
  {
    "caption": ":split - Split the Pane Horizontally",
    "command": "run_multiple_commands",
    "args": {
      "commands": [
        { "command": "create_pane", "args": {"direction": "right"}, "context": "window"},
        { "command": "travel_to_pane", "args": {"direction": "right"}, "context": "window"}
  ]}},
  { "caption": ":close - Close Pane", "command": "destroy_pane", "args": {"direction":"self"}},
  {
    "caption": ":close! - Close Pane and All Files in it",
    "command": "run_multiple_commands",
    "args": {
      "commands": [
        { "command": "close_other_tabs", "context": "window"},
        { "command": "close", "context": "window"},
        { "command": "destroy_pane", "args": {"direction": "self"}, "context": "window"}
  ]}},

  {
    "caption": ":splitpull - Split the Pane Horizontally and pull this file to it.",
    "command": "create_pane_with_file", "args": {"direction": "right"}
  },
  {
    "caption": ":vsplitpull - Split the Pane Vertically and pull this file to it.",
    "command": "create_pane_with_file", "args": {"direction": "down"}
  },

  /**
   * Bookmarks
   */
  { "caption": ":marks - List of Bookmarks", "command": "sublime_bookmark", "args" : { "type" : "goto" }},
  { "caption": ":marks r - Remove Bookmark", "command": "sublime_bookmark", "args": {"type": "remove"}},
  { "caption": ":marks c - Clear Bookmarks", "command": "sublime_bookmark", "args": {"type": "remove_all"}},

  /**
   * Clipboard/Registers
   */
  { "caption": ":reg - Show Registers", "command": "ex_list_registers", "args": {"command_line": ""}},
  { "caption": ":clip - See Clipboard History", "command": "clipboard_manager_choose_and_paste"},

  /**
   * Git
   */
  { "caption": ":git push - Git Push", "command": "gs_push"},
  { "caption": ":git commit - Git Commit", "command": "gs_quick_commit"},
  { "caption": ":git commitv - Git Commit (Verbose)", "command": "gs_commit"},
  { "caption": ":git status - Git Status", "command": "gs_show_status"},
  { "caption": ":git pull - Git Pull", "command": "gs_pull"},
  { "caption": ":git next - Next Difference", "command": "git_gutter_next_change"},
  { "caption": ":git previous - Previous Difference", "command": "git_gutter_prev_change"},
  { "caption": ":git diff - Open GitGutter Diff Popup", "command": "git_gutter_diff_popup"},

  /**
   * MultiEditUtils
   */
  { "caption": ":selection fields - Convert Selection to Snippet-like Fields", "command": "selection_fields"},
  { "caption": ":selection add - Add last Selection to Current Selection", "command": "add_last_selection"},
  {
    "caption": ":selection split - Split Selection With Given Separator",
    "command": "run_multiple_commands",
    "args": {
        "commands": [
        { "command": "add_last_selection" },
        { "command": "split_selection" }
    ]}
  },
  { "caption": ":selection all - Select All That Match Current Selection", "command": "multi_find_all"},
  { "caption": ":selection trim - Trim Whitespace from selection", "command": "strip_selection"},

  /**
   * Case
   */
  { "caption": ":preserveCase - Change Selections While Preserving Case", "command": "preserve_case"},
  { "caption": ":case PascalCase - Convert Selection to PascalCase", "command": "convert_to_pascal"},
  { "caption": ":case camelCase - Convert Selection to camelCase", "command": "convert_to_camel"},
  { "caption": ":case snake_case - Convert Selection to snake_case", "command": "convert_to_snake"},
  { "caption": ":case SCREAMING_SNAKE_CASE - Convert Selection to SCREAMING_SNAKE_CASE", "command": "convert_to_screaming_snake"},
  { "caption": ":case dot.case - Convert Selection to dot.case", "command": "convert_to_dot"},
  { "caption": ":case dash-case - Convert Selection to dash-case", "command": "convert_to_dash"},
  { "caption": ":case separate/with/slash - Convert Selection to separate/with/slash case", "command": "convert_to_separate_words"},
  { "caption": ":case separate\\with\\backslash - Convert Selection to separate\\with\\backslash case", "command": "convert_to_back_slash"},

  /**
   * Syntax
   */
  { "caption": ":syntax sh - Set syntax to .sh", "command": "set_file_type", "args": {"syntax": "Packages/ShellScript/Shell-Unix-Generic.sublime-syntax"}},
  /**
   * Misc.
   */
  { "caption": ":gencheat - Generate Cheatsheet", "command": "generate_cheatsheet"},
  { "caption": ":genjavadocs - Generate JavaDocs", "command": "generate_javadocs"},
  { "caption": ":genpydocs - Generage Pydocs", "command": "generate_pydocs"},
  { "caption": ":commands - Open User Sublime Commands File", "command": "open_file", "args": {"file": "/home/sbrow/.config/sublime-text-3/Packages/User/UserCommands.sublime-commands"}},
  { "caption": ":spell - Toggle Spellcheck", "command": "toggle_setting", "args": {"setting": "spell_check"} },
  { "caption": ":minimap - Toggle Minimap", "command": "toggle_minimap"},
  { "caption": ":align - AlignTab", "command":"align_tab"},
  { "caption": ":grep - Find in Files", "command": "show_panel", "args": {"panel": "find_in_files"}},
  { "caption": ":%s - Open Replace Panel", "command": "show_panel", "args": {"panel": "replace", "reverse": false}},
  { "caption": ":build - Set Build System", "command": "build", "args": {"select": true}},
  { "caption": ":goto", "command": "show_overlay", "args": {"overlay": "goto", "show_files": true}}
]